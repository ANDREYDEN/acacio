/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/employees': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.employees.id'];
          created_at?: parameters['rowFilter.employees.created_at'];
          first_name?: parameters['rowFilter.employees.first_name'];
          last_name?: parameters['rowFilter.employees.last_name'];
          date_of_birth?: parameters['rowFilter.employees.date_of_birth'];
          salary?: parameters['rowFilter.employees.salary'];
          coefficient?: parameters['rowFilter.employees.coefficient'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['employees'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** employees */
          employees?: definitions['employees'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.employees.id'];
          created_at?: parameters['rowFilter.employees.created_at'];
          first_name?: parameters['rowFilter.employees.first_name'];
          last_name?: parameters['rowFilter.employees.last_name'];
          date_of_birth?: parameters['rowFilter.employees.date_of_birth'];
          salary?: parameters['rowFilter.employees.salary'];
          coefficient?: parameters['rowFilter.employees.coefficient'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.employees.id'];
          created_at?: parameters['rowFilter.employees.created_at'];
          first_name?: parameters['rowFilter.employees.first_name'];
          last_name?: parameters['rowFilter.employees.last_name'];
          date_of_birth?: parameters['rowFilter.employees.date_of_birth'];
          salary?: parameters['rowFilter.employees.salary'];
          coefficient?: parameters['rowFilter.employees.coefficient'];
        };
        body: {
          /** employees */
          employees?: definitions['employees'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/shifts': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.shifts.id'];
          employee_id?: parameters['rowFilter.shifts.employee_id'];
          date?: parameters['rowFilter.shifts.date'];
          duration?: parameters['rowFilter.shifts.duration'];
          created_at?: parameters['rowFilter.shifts.created_at'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['shifts'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** shifts */
          shifts?: definitions['shifts'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.shifts.id'];
          employee_id?: parameters['rowFilter.shifts.employee_id'];
          date?: parameters['rowFilter.shifts.date'];
          duration?: parameters['rowFilter.shifts.duration'];
          created_at?: parameters['rowFilter.shifts.created_at'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.shifts.id'];
          employee_id?: parameters['rowFilter.shifts.employee_id'];
          date?: parameters['rowFilter.shifts.date'];
          duration?: parameters['rowFilter.shifts.duration'];
          created_at?: parameters['rowFilter.shifts.created_at'];
        };
        body: {
          /** shifts */
          shifts?: definitions['shifts'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  employees: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    first_name?: string;
    /** Format: text */
    last_name?: string;
    /** Format: date */
    date_of_birth?: string;
    /** Format: double precision */
    salary?: number;
    /** Format: double precision */
    coefficient?: number;
  };
  /** @description The work shifts for each employee */
  shifts: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `employees.id`.<fk table='employees' column='id'/>
     */
    employee_id?: number;
    /** Format: timestamp without time zone */
    date?: string;
    /** Format: smallint */
    duration?: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: 'params=single-object';
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: 'return=representation' | 'return=minimal' | 'return=none';
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: 'count=none';
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description employees */
  'body.employees': definitions['employees'];
  /** Format: bigint */
  'rowFilter.employees.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.employees.created_at': string;
  /** Format: text */
  'rowFilter.employees.first_name': string;
  /** Format: text */
  'rowFilter.employees.last_name': string;
  /** Format: date */
  'rowFilter.employees.date_of_birth': string;
  /** Format: double precision */
  'rowFilter.employees.salary': string;
  /** Format: double precision */
  'rowFilter.employees.coefficient': string;
  /** @description shifts */
  'body.shifts': definitions['shifts'];
  /** Format: bigint */
  'rowFilter.shifts.id': string;
  /** Format: bigint */
  'rowFilter.shifts.employee_id': string;
  /** Format: timestamp without time zone */
  'rowFilter.shifts.date': string;
  /** Format: smallint */
  'rowFilter.shifts.duration': string;
  /** Format: timestamp with time zone */
  'rowFilter.shifts.created_at': string;
}

export interface operations {}

export interface external {}
