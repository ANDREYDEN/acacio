/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/bonuses': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.bonuses.id'];
          created_at?: parameters['rowFilter.bonuses.created_at'];
          employee_id?: parameters['rowFilter.bonuses.employee_id'];
          amount?: parameters['rowFilter.bonuses.amount'];
          reason?: parameters['rowFilter.bonuses.reason'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['bonuses'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** bonuses */
          bonuses?: definitions['bonuses'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.bonuses.id'];
          created_at?: parameters['rowFilter.bonuses.created_at'];
          employee_id?: parameters['rowFilter.bonuses.employee_id'];
          amount?: parameters['rowFilter.bonuses.amount'];
          reason?: parameters['rowFilter.bonuses.reason'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.bonuses.id'];
          created_at?: parameters['rowFilter.bonuses.created_at'];
          employee_id?: parameters['rowFilter.bonuses.employee_id'];
          amount?: parameters['rowFilter.bonuses.amount'];
          reason?: parameters['rowFilter.bonuses.reason'];
        };
        body: {
          /** bonuses */
          bonuses?: definitions['bonuses'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/employee_roles': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.employee_roles.id'];
          name?: parameters['rowFilter.employee_roles.name'];
          created_at?: parameters['rowFilter.employee_roles.created_at'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['employee_roles'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** employee_roles */
          employee_roles?: definitions['employee_roles'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.employee_roles.id'];
          name?: parameters['rowFilter.employee_roles.name'];
          created_at?: parameters['rowFilter.employee_roles.created_at'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.employee_roles.id'];
          name?: parameters['rowFilter.employee_roles.name'];
          created_at?: parameters['rowFilter.employee_roles.created_at'];
        };
        body: {
          /** employee_roles */
          employee_roles?: definitions['employee_roles'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/employees': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.employees.id'];
          created_at?: parameters['rowFilter.employees.created_at'];
          first_name?: parameters['rowFilter.employees.first_name'];
          last_name?: parameters['rowFilter.employees.last_name'];
          role_id?: parameters['rowFilter.employees.role_id'];
          birth_date?: parameters['rowFilter.employees.birth_date'];
          salary?: parameters['rowFilter.employees.salary'];
          income_percentage?: parameters['rowFilter.employees.income_percentage'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['employees'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** employees */
          employees?: definitions['employees'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.employees.id'];
          created_at?: parameters['rowFilter.employees.created_at'];
          first_name?: parameters['rowFilter.employees.first_name'];
          last_name?: parameters['rowFilter.employees.last_name'];
          role_id?: parameters['rowFilter.employees.role_id'];
          birth_date?: parameters['rowFilter.employees.birth_date'];
          salary?: parameters['rowFilter.employees.salary'];
          income_percentage?: parameters['rowFilter.employees.income_percentage'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.employees.id'];
          created_at?: parameters['rowFilter.employees.created_at'];
          first_name?: parameters['rowFilter.employees.first_name'];
          last_name?: parameters['rowFilter.employees.last_name'];
          role_id?: parameters['rowFilter.employees.role_id'];
          birth_date?: parameters['rowFilter.employees.birth_date'];
          salary?: parameters['rowFilter.employees.salary'];
          income_percentage?: parameters['rowFilter.employees.income_percentage'];
        };
        body: {
          /** employees */
          employees?: definitions['employees'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/prepaid_expenses': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.prepaid_expenses.id'];
          created_at?: parameters['rowFilter.prepaid_expenses.created_at'];
          amount?: parameters['rowFilter.prepaid_expenses.amount'];
          employee_id?: parameters['rowFilter.prepaid_expenses.employee_id'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['prepaid_expenses'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** prepaid_expenses */
          prepaid_expenses?: definitions['prepaid_expenses'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.prepaid_expenses.id'];
          created_at?: parameters['rowFilter.prepaid_expenses.created_at'];
          amount?: parameters['rowFilter.prepaid_expenses.amount'];
          employee_id?: parameters['rowFilter.prepaid_expenses.employee_id'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.prepaid_expenses.id'];
          created_at?: parameters['rowFilter.prepaid_expenses.created_at'];
          amount?: parameters['rowFilter.prepaid_expenses.amount'];
          employee_id?: parameters['rowFilter.prepaid_expenses.employee_id'];
        };
        body: {
          /** prepaid_expenses */
          prepaid_expenses?: definitions['prepaid_expenses'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/shifts': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.shifts.id'];
          created_at?: parameters['rowFilter.shifts.created_at'];
          employee_id?: parameters['rowFilter.shifts.employee_id'];
          duration?: parameters['rowFilter.shifts.duration'];
          date?: parameters['rowFilter.shifts.date'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['shifts'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** shifts */
          shifts?: definitions['shifts'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.shifts.id'];
          created_at?: parameters['rowFilter.shifts.created_at'];
          employee_id?: parameters['rowFilter.shifts.employee_id'];
          duration?: parameters['rowFilter.shifts.duration'];
          date?: parameters['rowFilter.shifts.date'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.shifts.id'];
          created_at?: parameters['rowFilter.shifts.created_at'];
          employee_id?: parameters['rowFilter.shifts.employee_id'];
          duration?: parameters['rowFilter.shifts.duration'];
          date?: parameters['rowFilter.shifts.date'];
        };
        body: {
          /** shifts */
          shifts?: definitions['shifts'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  /** @description Extra money bonuses assigned to employees */
  bonuses: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `employees.id`.<fk table='employees' column='id'/>
     */
    employee_id: number;
    /** Format: bigint */
    amount: number;
    /** Format: text */
    reason?: string;
  };
  /** @description Role descriptions for employees */
  employee_roles: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    name: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
  };
  /** @description Describes bar employees */
  employees: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    first_name: string;
    /** Format: text */
    last_name?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `employee_roles.id`.<fk table='employee_roles' column='id'/>
     */
    role_id: number;
    /** Format: date */
    birth_date?: string;
    /** Format: bigint */
    salary: number;
    /** Format: numeric */
    income_percentage: number;
  };
  prepaid_expenses: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: bigint */
    amount?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `employees.id`.<fk table='employees' column='id'/>
     */
    employee_id?: number;
  };
  /** @description Work shifts for employees */
  shifts: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `employees.id`.<fk table='employees' column='id'/>
     */
    employee_id: number;
    /** Format: smallint */
    duration: number;
    /** Format: date */
    date: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: 'params=single-object';
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: 'return=representation' | 'return=minimal' | 'return=none';
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: 'count=none';
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description bonuses */
  'body.bonuses': definitions['bonuses'];
  /** Format: bigint */
  'rowFilter.bonuses.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.bonuses.created_at': string;
  /** Format: bigint */
  'rowFilter.bonuses.employee_id': string;
  /** Format: bigint */
  'rowFilter.bonuses.amount': string;
  /** Format: text */
  'rowFilter.bonuses.reason': string;
  /** @description employee_roles */
  'body.employee_roles': definitions['employee_roles'];
  /** Format: bigint */
  'rowFilter.employee_roles.id': string;
  /** Format: text */
  'rowFilter.employee_roles.name': string;
  /** Format: timestamp with time zone */
  'rowFilter.employee_roles.created_at': string;
  /** @description employees */
  'body.employees': definitions['employees'];
  /** Format: bigint */
  'rowFilter.employees.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.employees.created_at': string;
  /** Format: text */
  'rowFilter.employees.first_name': string;
  /** Format: text */
  'rowFilter.employees.last_name': string;
  /** Format: bigint */
  'rowFilter.employees.role_id': string;
  /** Format: date */
  'rowFilter.employees.birth_date': string;
  /** Format: bigint */
  'rowFilter.employees.salary': string;
  /** Format: numeric */
  'rowFilter.employees.income_percentage': string;
  /** @description prepaid_expenses */
  'body.prepaid_expenses': definitions['prepaid_expenses'];
  /** Format: bigint */
  'rowFilter.prepaid_expenses.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.prepaid_expenses.created_at': string;
  /** Format: bigint */
  'rowFilter.prepaid_expenses.amount': string;
  /** Format: bigint */
  'rowFilter.prepaid_expenses.employee_id': string;
  /** @description shifts */
  'body.shifts': definitions['shifts'];
  /** Format: bigint */
  'rowFilter.shifts.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.shifts.created_at': string;
  /** Format: bigint */
  'rowFilter.shifts.employee_id': string;
  /** Format: smallint */
  'rowFilter.shifts.duration': string;
  /** Format: date */
  'rowFilter.shifts.date': string;
}

export interface operations {}

export interface external {}
